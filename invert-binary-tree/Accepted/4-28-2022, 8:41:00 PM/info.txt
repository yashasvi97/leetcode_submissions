{"id":689385737,"lang":"python3","time":"1 month, 1 week","timestamp":1651192860,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/689385737/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"13.8 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        if root is None:\n            return None\n        else:\n            # print(root.val)\n            if root.left and root.right:\n                temp = root.right\n                root.right = root.left\n                root.left = temp\n                self.invertTree(root.left)\n                self.invertTree(root.right)\n            elif root.left and not root.right:\n                root.right = root.left\n                root.left = None\n                self.invertTree(root.right)\n            elif not root.left and root.right:\n                root.left = root.right\n                root.right = None\n                self.invertTree(root.left)\n            return root","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}