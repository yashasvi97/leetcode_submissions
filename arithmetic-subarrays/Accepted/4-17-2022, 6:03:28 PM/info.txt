{"id":682411330,"lang":"python3","time":"1Â month, 2Â weeks","timestamp":1650233008,"status_display":"Accepted","runtime":"192 ms","url":"/submissions/detail/682411330/","is_pending":"Not Pending","title":"Arithmetic Subarrays","memory":"14 MB","code":"class Solution:\n    def checkArithmeticSubarrays(self, nums: List[int], l: List[int], r: List[int]) -> List[bool]:\n        answer = []\n        for (l_, r_) in zip(l, r):\n            sub = nums[l_:r_+1]\n            sub.sort()\n            n = len(sub)\n            if n > 1:\n                test = sub[1] - sub[0]\n                f = 0\n                for i in range(1, n-1):\n                    if sub[i+1]-sub[i] != test:\n                        f = 1\n                        break\n                if f == 1:\n                    answer.append(False)\n                else:\n                    answer.append(True)\n        return answer\n                        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-subarrays"}