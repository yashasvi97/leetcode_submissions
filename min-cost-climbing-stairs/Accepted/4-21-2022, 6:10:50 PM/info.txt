{"id":685050215,"lang":"python3","time":"1 month, 2 weeks","timestamp":1650579050,"status_display":"Accepted","runtime":"74 ms","url":"/submissions/detail/685050215/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"14.1 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        n = len(cost)\n        if n == 2:\n            return min([cost[0], cost[1]])\n        else:\n            \n            local = [0] * (n+1)\n            local[0] = 0\n            local[1] = 0\n            local[2] = min([cost[0], cost[1]])\n            for i in range(3, n+1):\n                local[i] = min([cost[i-1]+local[i-1], cost[i-2]+local[i-2]])\n            return local[n]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs"}