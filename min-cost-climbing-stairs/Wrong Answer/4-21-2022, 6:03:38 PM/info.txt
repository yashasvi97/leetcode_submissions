{"id":685047691,"lang":"python3","time":"1 month, 2 weeks","timestamp":1650578618,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/685047691/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"N/A","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        n = len(cost)\n        if n == 2:\n            return min([cost[0], cost[1]])\n        else:\n            local = [0] * (n+1)\n            local[0] = 0\n            local[1] = 0\n            local[2] = min([cost[0], cost[1]])\n            for i in range(3, n+1):\n                local[i] = min([cost[0] + local[i-1], cost[1]+ local[i-2]])\n            return local[n]","compare_result":"1011111000100010001111000000000000111100000000000011110000000000001111100010001000000001110100010000000000011101000000000011111000111110001000100000000111010001000000000000110010000000000000001111111000100010000000011101000100000000000011001000000000000000011000000000000000000011110","title_slug":"min-cost-climbing-stairs"}