{"id":698395972,"lang":"python3","time":"3 weeks, 3 days","timestamp":1652403617,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/698395972/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        ROWS, COLS = len(grid), len(grid[0])\n        \n        visit = [[False for c in range(COLS)] for r in range(ROWS)]\n        \n        def dfs(r, c):\n            if (r < 0 or c < 0 or\n                r == ROWS or c == COLS or\n                grid[r][c] == 0 or\n                visit[r][c]):\n                return\n            \n            visit[r][c] = True\n            \n            # island.add((r, c))\n            \n            i1 = dfs(r+1, c)\n            # if i1 is not None:\n                # island = i1\n            i2 = dfs(r-1, c)\n            # if i2 is not None:\n                # island = i2\n            i3 = dfs(r, c+1)\n            # if i3 is not None:\n                # island = i3\n            i4 = dfs(r, c-1)\n            # if i4 is not None:\n                # island = i4\n            \n            return 1\n        \n        k = 0\n        for r in range(ROWS):\n            for c in range(COLS):\n                if not visit[r][c] and grid[r][c]:\n                    res = dfs(r, c)\n                    if res is not None:\n                        k += 1\n                    \n        return k","compare_result":"1010111001101001111011000001011011000001001000000","title_slug":"number-of-islands"}