{"id":694364008,"lang":"python3","time":"1Â month","timestamp":1651851510,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/694364008/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"16.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n        def checkBST(source, min_=None, max_=None):\n            if source is None:\n                return True\n            if (min_ is not None and source.val <= min_) or (max_ is not None and source.val >= max_):\n                return False\n            if (not checkBST(source.left, min_, source.val)) or (not checkBST(source.right, source.val, max_)):\n                return False\n            return True\n        return checkBST(root)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}