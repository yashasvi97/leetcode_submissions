{"id":693909831,"lang":"python3","time":"1Â month","timestamp":1651785249,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/693909831/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"17.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def checkleft(self, node):\n        return node.left.val < node.val\n    \n    def checkright(self, node):\n        return node.val < node.right.val\n    \n    def isValidBST(self, root: Optional[TreeNode]) -> bool:\n        discovered = []\n        def preorder(source):\n            if source is not None:\n                preorder(source.left)\n                discovered.append(source.val)\n                preorder(source.right)\n        preorder(root)\n        f = 0\n        for x in range(len(discovered)-1):\n            if discovered[x] >= discovered[x+1]:\n                f = 1\n                break\n        if f:\n            return False\n        else:\n            return True","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}