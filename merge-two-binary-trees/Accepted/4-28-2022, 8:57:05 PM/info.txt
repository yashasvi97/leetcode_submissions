{"id":689391222,"lang":"python3","time":"1 month, 1 week","timestamp":1651193825,"status_display":"Accepted","runtime":"91 ms","url":"/submissions/detail/689391222/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"15.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def mergeTrees(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> Optional[TreeNode]:\n        if root1 and root2:\n            root1.val += root2.val\n            root1.left = self.mergeTrees(root1.left, root2.left)\n            root1.right = self.mergeTrees(root1.right, root2.right)\n            return root1\n        elif root1 and not root2:\n            return root1\n        elif not root1 and root2:\n            return root2\n        else:\n            return","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}