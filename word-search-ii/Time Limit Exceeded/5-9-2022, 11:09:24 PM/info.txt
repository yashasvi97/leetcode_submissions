{"id":696509287,"lang":"python3","time":"3 weeks, 6 days","timestamp":1652152164,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/696509287/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class Node:\n    def __init__(self):\n        self.children = {}\n        self.terminal = False\n    \n    def addWords(self, word):\n        curr = self\n        for c in word:\n            if c not in curr.children:\n                curr.children[c] = Node()\n            curr = curr.children[c]\n        curr.terminal = True\n        \nclass Solution:\n    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:\n        ROWS, COLS = len(board), len(board[0])\n        res, visit = set(), set()\n        \n        root = Node()\n        for w in words:\n            root.addWords(w)\n            \n        def dfs(r, c, node, word):\n            if (r < 0 or c < 0 or\n                r == ROWS or c == COLS or\n                board[r][c] not in node.children or \n                (r, c) in visit):\n                return\n            \n            visit.add((r, c))\n            node = node.children[board[r][c]]\n            word += board[r][c]\n            if node.terminal:\n                res.add(word)\n                \n            dfs(r+1, c, node, word)\n            dfs(r-1, c, node, word)\n            dfs(r, c+1, node, word)\n            dfs(r, c-1, node, word)\n            visit.remove((r, c))\n            \n            \n        for r in range(ROWS):\n            for c in range(COLS):\n                if board[r][c] in root.children:\n                    dfs(r, c, root, \"\")\n        \n        return list(res)","compare_result":"111111111111111111111111111111111111111111111111111111111111110","title_slug":"word-search-ii"}