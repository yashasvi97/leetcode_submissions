{"id":693727553,"lang":"python3","time":"1Â month","timestamp":1651764128,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/693727553/","is_pending":"Not Pending","title":"Same Tree","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:\n        def compare(nodeA, nodeB):\n            if nodeA is None or nodeB is None:\n                if (nodeA is None and nodeB is not None) or (nodeA is not None and nodeB is None):\n                    return False\n                return True\n            if nodeA.val != nodeB.val:\n                return False\n            if compare(nodeA.left, nodeB.left) and compare(nodeA.right, nodeB.right):\n                return True\n            return False\n        return compare(p, q)","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree"}