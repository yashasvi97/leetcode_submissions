{"id":694517008,"lang":"python3","time":"1Â month","timestamp":1651870052,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/694517008/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"21.5 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxPathSum(self, root: Optional[TreeNode]) -> int:\n        \n        def util(src):\n            if src is not None:\n                sum_l = util(src.left)\n                sum_r = util(src.right)\n                \n                max_single = max(max(sum_l, sum_r) + src.val, src.val)\n                \n                max_top = max(max_single, sum_l+sum_r+src.val)\n                \n                util.res = max(max_top, util.res)\n                \n                return max_single\n            else:\n                return 0\n        \n        import sys\n        util.res = -1*sys.maxsize\n        util(root)\n        return util.res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}