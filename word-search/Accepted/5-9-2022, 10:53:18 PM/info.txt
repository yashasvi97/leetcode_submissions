{"id":696501303,"lang":"python3","time":"3 weeks, 6 days","timestamp":1652151198,"status_display":"Accepted","runtime":"6870 ms","url":"/submissions/detail/696501303/","is_pending":"Not Pending","title":"Word Search","memory":"14 MB","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        ROWS, COLS = len(board), len(board[0])\n        path = set()\n        \n        def dfs(r, c, i):\n            if i == len(word):\n                return True\n            if (r < 0 or c < 0 or\n                r >= ROWS or c >= COLS or\n                word[i] != board[r][c] or\n                (r, c) in path):\n                return False\n            \n            path.add((r, c))\n            res = (dfs(r+1, c, i+1) or \n                   dfs(r-1, c, i+1) or\n                   dfs(r, c-1, i+1) or \n                   dfs(r, c+1, i+1))\n            path.remove((r, c))\n            return res\n            \n            \n            \n            \n        for r in range(ROWS):\n            for c in range(COLS):\n                if dfs(r, c, 0): return True\n        return False","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search"}