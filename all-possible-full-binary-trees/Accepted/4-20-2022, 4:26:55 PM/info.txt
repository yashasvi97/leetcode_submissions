{"id":684355672,"lang":"python3","time":"1 month, 2 weeks","timestamp":1650486415,"status_display":"Accepted","runtime":"435 ms","url":"/submissions/detail/684355672/","is_pending":"Not Pending","title":"All Possible Full Binary Trees","memory":"23.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def allPossibleFBT(self, n: int) -> List[Optional[TreeNode]]:\n        res = []\n        if n %2 == 0:\n            return res\n        if n == 1:\n            node = TreeNode(val=0)\n            res.append(node)\n        for i in range(1, n-1, 2):\n            left = self.allPossibleFBT(i)\n            right = self.allPossibleFBT(n-1-i)\n            for l in left:\n                for r in right:\n                    root = TreeNode(val=0)\n                    root.left = l\n                    root.right = r\n                    res.append(root)\n        return res\n            ","compare_result":"11111111111111111111","title_slug":"all-possible-full-binary-trees"}