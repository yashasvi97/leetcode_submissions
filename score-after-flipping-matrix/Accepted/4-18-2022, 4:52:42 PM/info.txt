{"id":683039171,"lang":"python3","time":"1 month, 2 weeks","timestamp":1650315162,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/683039171/","is_pending":"Not Pending","title":"Score After Flipping Matrix","memory":"13.9 MB","code":"class Solution:\n    def matrixScore(self, grid: List[List[int]]) -> int:\n        m = len(grid[0])\n        n = len(grid)\n        for r in grid:\n            tmp = r.copy()\n            tmp = [1-x for x in tmp]\n            tmp_str = ''.join([str(_) for _ in tmp])\n            r_str   = ''.join([str(_) for _ in r])\n            if int(tmp_str, 2) > int(r_str, 2):\n                for idx, _ in enumerate(tmp):\n                    r[idx] = tmp[idx]\n        \n        for c in range(m):\n            c_zero = 0\n            c_one = 0\n            for i in range(n):\n                if grid[i][c] == 1:\n                    c_one += 1\n                elif grid[i][c] == 0:\n                    c_zero += 1\n                \n            if c_one < c_zero:\n                for i in range(n):\n                    grid[i][c] = 1-grid[i][c]\n        # print(grid)\n        s = 0\n        for r in grid:\n            s += int(''.join([str(_) for _ in r]), 2)\n        return s","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"score-after-flipping-matrix"}