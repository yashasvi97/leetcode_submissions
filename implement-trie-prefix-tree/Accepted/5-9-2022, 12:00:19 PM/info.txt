{"id":696198348,"lang":"python3","time":"4Â weeks","timestamp":1652112019,"status_display":"Accepted","runtime":"529 ms","url":"/submissions/detail/696198348/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"34.2 MB","code":"class Node:\n    def __init__(self, val=None, terminal=False):\n        self.terminal = terminal\n        self.val      = val\n        self.children = [None] * 26\n    # def __str__(self):\n    #     print(self.val, self.terminal)\n    #     for i in range(26):\n    #         if self.children[i] is not None:\n    #             print(self.children[i].val, end=\", \")\n    #     print(\"\")\nclass Trie:\n\n    def __init__(self):\n        self.root = Node()\n\n    def insert(self, word: str) -> None:\n        node = self.root\n        i = 0\n        while i < len(word):\n            x = word[i]\n            \n            ind = ord(x) - ord('a')\n            \n            if node.children[ind] is None:\n                node.children[ind] = Node(val=x)\n            node = node.children[ind]\n            \n            i += 1\n            \n        node.val = word\n        node.terminal = True\n        # print(self.root)\n\n    def search(self, word: str) -> bool:\n        i = 0\n        node = self.root\n        while i < len(word):\n            x = word[i]\n            ind = ord(x) - ord('a')\n            \n            if node.children[ind] is None:\n                return False\n            node = node.children[ind]\n            \n            i += 1\n        print(word, node.val, node.terminal)\n        if node.val == word and node.terminal:\n            return True\n        return False\n\n    def startsWith(self, prefix: str) -> bool:\n        i = 0\n        node = self.root\n        while i < len(prefix):\n            x = prefix[i]\n            ind = ord(x) - ord('a')\n            \n            if node.children[ind] is None:\n                return False\n            node = node.children[ind]\n            \n            i += 1\n        return True\n            \n\n\n# Your Trie object will be instantiated and called as such:\n# obj = Trie()\n# obj.insert(word)\n# param_2 = obj.search(word)\n# param_3 = obj.startsWith(prefix)","compare_result":"111111111111111","title_slug":"implement-trie-prefix-tree"}