{"id":682509080,"lang":"python3","time":"1 month, 2 weeks","timestamp":1650247785,"status_display":"Accepted","runtime":"135 ms","url":"/submissions/detail/682509080/","is_pending":"Not Pending","title":"Design a Stack With Increment Operation","memory":"14.8 MB","code":"class CustomStack:\n\n    def __init__(self, maxSize: int):\n        self.stack = []\n        self.size = maxSize\n\n    def push(self, x: int) -> None:\n        if len(self.stack) < self.size:\n            self.stack.append(x)\n\n    def pop(self) -> int:\n        if len(self.stack) == 0:\n            return -1\n        else:\n            x = self.stack.pop()\n            return x\n\n    def increment(self, k: int, val: int) -> None:\n        for i in range(min(k, len(self.stack))):\n            self.stack[i] += val\n\n\n# Your CustomStack object will be instantiated and called as such:\n# obj = CustomStack(maxSize)\n# obj.push(x)\n# param_2 = obj.pop()\n# obj.increment(k,val)","compare_result":"1111111111111111111111111111111111","title_slug":"design-a-stack-with-increment-operation"}