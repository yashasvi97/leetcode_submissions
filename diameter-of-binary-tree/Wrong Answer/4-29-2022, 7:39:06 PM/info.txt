{"id":689931029,"lang":"python3","time":"1 month, 1 week","timestamp":1651275546,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/689931029/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        if root:\n            dl = self.diameterOfBinaryTree(root.left)\n            dr = self.diameterOfBinaryTree(root.right)\n            stack = [(root, 1)]\n            max_depth = 1\n            while len(stack) != 0:\n                (v, depth) = stack.pop()\n                max_depth = max([depth, max_depth])\n                if v.left is not None:\n                    stack.append((v.left, depth+1))\n                if v.right is not None:\n                    stack.append((v.right, depth+1))\n            return max([dl, dr, max_depth])\n        else:\n            return 0","compare_result":"10000100001001101000000010000001001001111101000001000000000000000000001101000011110100100010000010000000","title_slug":"diameter-of-binary-tree"}