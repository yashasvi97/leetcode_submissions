{"id":690385430,"lang":"python3","time":"1 month, 1 week","timestamp":1651341980,"status_display":"Accepted","runtime":"642 ms","url":"/submissions/detail/690385430/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def height(self, source):\n        if source is None:\n            return 0\n        else:\n            return 1 + max(self.height(source.left), self.height(source.right))\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        if root is None:\n            return 0\n        else:\n            dl = self.diameterOfBinaryTree(root.left)\n            dr = self.diameterOfBinaryTree(root.right)\n            \n            hl = self.height(root.left)\n            hr = self.height(root.right)\n            \n            return max(hl+hr, max(dl, dr))","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}