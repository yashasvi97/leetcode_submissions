{"id":689983867,"lang":"python3","time":"1 month, 1 week","timestamp":1651287052,"status_display":"Accepted","runtime":"682 ms","url":"/submissions/detail/689983867/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def max_height(self, source):\n        if source is None:\n            return 0\n        else:\n            return 1 + max([self.max_height(source.left), self.max_height(source.right)])\n    \n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        if root is None:\n            return 0\n        lh = self.max_height(root.left)\n        rh = self.max_height(root.right)\n        \n        dl = self.diameterOfBinaryTree(root.left)\n        dr = self.diameterOfBinaryTree(root.right)\n        return max([lh+rh, max([dl, dr])])","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}