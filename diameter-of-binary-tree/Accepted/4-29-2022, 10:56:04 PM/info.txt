{"id":689985565,"lang":"python3","time":"1 month, 1 week","timestamp":1651287364,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/689985565/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"16.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:\n        res = [0]\n        def dfs(source):\n            if source is None:\n                return -1\n            l = dfs(source.left)\n            r = dfs(source.right)\n            \n            d = l + r + 2\n            res[0] = max(res[0], d)\n            \n            return 1 + max(l, r)\n        dfs(root)\n        return res[0]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}