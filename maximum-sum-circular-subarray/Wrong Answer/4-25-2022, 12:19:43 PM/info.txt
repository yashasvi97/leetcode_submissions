{"id":687326067,"lang":"python3","time":"1 month, 1 week","timestamp":1650903583,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/687326067/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution:\n    def maxSubarraySumCircular(self, nums: List[int]) -> int:\n        def max_sub_array(arr):\n            max_so_far = arr[0]\n            currMax = arr[0]\n            for i in range(1, len(arr)):\n                currMax = max(arr[i], currMax + arr[i])\n                max_so_far = max(currMax, max_so_far)\n            return max_so_far\n        mx1 = max_sub_array(nums[:-1])\n        mx2 = max_sub_array(nums[1:])\n        return max([mx1, mx2])","compare_result":"101111111010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-sum-circular-subarray"}