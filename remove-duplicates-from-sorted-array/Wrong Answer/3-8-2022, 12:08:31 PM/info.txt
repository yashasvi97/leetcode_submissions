{"id":655981577,"lang":"python3","time":"3Â months","timestamp":1646759311,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/655981577/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted Array","memory":"N/A","code":"class Solution:\n    def removeDuplicates(self, nums: List[int]) -> int:\n        n = len(nums)\n        dup = 0\n        tot_dup = 0\n        i = 0\n        j = 1\n        #set_trace()\n        while i < n-1:\n            val_i = nums[i]\n            #j = i + 1\n            while j <= (n-1) and nums[j] == val_i:\n                dup = 1\n                j += 1\n            if dup == 1:\n                if j == n:\n                    break\n                n_dup = j - i - 1\n                tot_dup += n_dup \n                while n_dup > 0:\n                    for k in range(j, n):\n                        nums[k-1] = nums[k]\n                    j -= 1\n                    nums[n-1] = -1\n                    n -= 1\n                    n_dup -= 1\n                dup = 0\n            i = i + 1\n            j = i + 1\n        if dup == 1:\n            n_dup = j - i - 1\n            tot_dup += n_dup\n            while n_dup > 0:\n                for k in range(j, n):\n                    nums[k-1] = nums[k]\n                j -= 1\n                nums[n-1] = -1\n                n -= 1\n                n_dup -= 1\n            '''if j != (i+1):\n                tot_dup += (j-i-1)'''\n        k_val = 0\n        while k_val < n and nums[k_val] != -1:\n            k_val += 1\n        #print(k_val, nums)\n        return k_val","compare_result":"1111111111111111100000000010001111111111111111111111111111101001011000000000000100000100010100100000000110000000000100100001001000001000000001000101000000000011111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111011111111111111110","title_slug":"remove-duplicates-from-sorted-array"}