{"id":696857224,"lang":"python3","time":"3 weeks, 6 days","timestamp":1652197885,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/696857224/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:\n        num = 0\n        def inorder(source, num):\n            if source is not None:\n                left = inorder(source.left)\n                if left is not None: return left\n                # source.val\n                num += 1\n                if num == k: \n                    return source\n                return inorder(source.right)\n            else:\n                return source\n        \n        \n        \n        return inorder(root, num).val","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"kth-smallest-element-in-a-bst"}