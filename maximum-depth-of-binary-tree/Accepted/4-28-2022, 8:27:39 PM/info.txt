{"id":689381259,"lang":"python3","time":"1 month, 1 week","timestamp":1651192059,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/689381259/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"15.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxDepth(self, root: Optional[TreeNode]) -> int:\n        if root is None:\n            return 0\n        else:\n            stack = [(root, 1)]\n            max_depth = 1\n            while len(stack) != 0:\n                node, depth = stack.pop()\n                max_depth = max([max_depth, depth])\n                if node.left:\n                    stack.append((node.left, depth + 1))\n                if node.right:\n                    stack.append((node.right, depth + 1))\n            return max_depth","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}